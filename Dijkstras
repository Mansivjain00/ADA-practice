#include <stdio.h>
int cost[10][10],distance[10],visited[10],pred[10],n;

void dijiktras(int startnode){
    int count,min=999,nextnode,count_nodes,j;
    
    for(int i=0;i<n;i++){
        distance[i]=cost[startnode][i];
        pred[i]=startnode;
        visited[i]=0;
    }
    
    distance[startnode]=0;
    visited[startnode]=1;
    count=1;
    while(count<n-1){
        min=999;
        for(int i=0;i<n;i++){
            if(!visited[i] && distance[i]<min){
               min=distance[i];
               nextnode=i;
            }
        }
        
        visited[nextnode]=1;
        for(int i=0;i<n;i++){
            if(!visited[i] && cost[nextnode][i]+min<distance[i]){
                distance[i]=cost[nextnode][i]+min;
                pred[i]=nextnode;
            }
        }
        count++;
    }
    
    // Path and count
    for(int i=0;i<n;i++){
        if(i!=startnode){
            printf("%d->%d: %d\n",startnode,i,distance[i]);
            printf("Path: %d",i);
            count_nodes=1;
            j=i;
            do{
                count_nodes++;
                j=pred[j];
                printf("<-%d",j);
            }while(j!=startnode);
            printf("\nCount of nodes for the above path: %d\n",count_nodes);
        }
        
    }
    
}

int main()
{
    int start;
    printf("Enter number of vertices\n");
    scanf("%d",&n);
    
    printf("Enter the cost adjacency mmatrix\n");
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            scanf("%d",&cost[i][j]);
            if(cost[i][j]==0){
                cost[i][j]=999;
            }
        }
    }
    
    printf("Enter the starting node\n");
    scanf("%d",&start);
    
    dijiktras(start);
}
