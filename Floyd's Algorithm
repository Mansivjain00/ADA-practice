#include <stdio.h>

int min(int a, int b){
    if(a<b){
        return a;
    }
    else{
        return b;
    }
}

void floyd(int arr[10][10],int n){
    for(int k=0;k<n;k++){
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                arr[i][j]=min(arr[i][j] , (arr[i][k] + arr[k][j]));
            }
        }
    }
}

void main(){
    int n,flag=0,source,destination;
    int arr[10][10];
    printf("Enter number of vertices\n");
    scanf("%d",&n);
    
    printf("Enter the adjacency matrix\n");
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            scanf("%d",&arr[i][j]);
            if(arr[i][j]==0 && i!=j){
                arr[i][j]=999;
            }
        }
    }
    
    floyd(arr,n);
    
    printf("Shortest paths \n");
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            if(arr[i][j]!=999 && i!=j){
                printf("%d->%d: %d\n",i,j,arr[i][j]);
            }
        }
    }
    
    // Modification
    printf("Enter source\n");
    scanf("%d",&source);
    printf("Enter destination\n");
    scanf("%d",&destination);
    printf("Shortest path from %d->%d is %d",source,destination,arr[source][destination]);
}
